package com.hisi.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import java.io.UnsupportedEncodingException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.hisi.common.util.YfslResult;
import com.hisi.model.HisiPermission;
import com.hisi.model.HisiRole;
import com.hisi.model.HisiRolePermission;
import com.hisi.service.PermissionService;
import com.hisi.service.RoleService;

@RestController
@RequestMapping("/permission")
@Api( description = "权限管理")
public class PermissionController {
	@Autowired
	private PermissionService permissionService;
	@Autowired
	private RoleService roleService;
	@ApiOperation(value = "查询页面对应的所有操作",httpMethod="GET")
	@GetMapping(value="/getAllPermissionsByPageName")
	public List<HisiPermission> getAllPermissionsByPageName(@RequestParam(required = true) @ApiParam("页面名称") String pageName) {
		List<HisiPermission> list=permissionService.getAllPermissionsByPageName(pageName);
		return list;
	}
	@ApiOperation(value = "增加权限配置（打钩）",httpMethod="GET")
	@GetMapping(value="/addPermission")
	public YfslResult addPermission(@RequestParam(required = true) @ApiParam("角色id") int roleId,
			@RequestParam(required = true) @ApiParam("权限名称") String permissionName) {
		int permissionId=permissionService.getPermissionId(permissionName);
		HisiRolePermission hisiRolePermission=new HisiRolePermission();
		hisiRolePermission.setPermissionId(permissionId);
		hisiRolePermission.setRoleId(roleId);
		int i=permissionService.addPermission(hisiRolePermission);
		if(i>0){
			return YfslResult.ok();
		}else{
			return YfslResult.fail("配置失败");
		}
	}
	@ApiOperation(value = "取消权限配置（取消打钩）",httpMethod="GET")
	@GetMapping(value="/deletePermission")
	public YfslResult deletePermission(@RequestParam(required = true) @ApiParam("角色id") int roleId,
			@RequestParam(required = true) @ApiParam("权限名称") String permissionName) {
		int permissionId=permissionService.getPermissionId(permissionName);
		HisiRolePermission hisiRolePermission=new HisiRolePermission();
		hisiRolePermission.setPermissionId(permissionId);
		hisiRolePermission.setRoleId(roleId);
		int i=permissionService.deletePermission(hisiRolePermission);
		if(i>0){
			return YfslResult.ok();
		}else{
			return YfslResult.fail("配置失败");
		}
	}
	@ApiOperation(value = "角色列表（切换角色时）",httpMethod="GET")
	@GetMapping(value="/getRoles")
	public List<HisiRole> getRoles() {
		return roleService.getAllRoles();
	}
	@ApiOperation(value = "获取该角色已有的页面权限",httpMethod="GET")
	@GetMapping(value="/getPagePermissionByRoleName")
	public List<HisiPermission>  getPagePermissionByRoleName(@RequestParam(required = true) @ApiParam("角色名字") String roleName) {
	
		return permissionService.getPermissionsByRoleName(roleName);
	}
	@ApiOperation(value = "获取该角色已有的页面操作权限",httpMethod="GET")
	@GetMapping(value="/getPermissionByRoleName")
	public List<HisiPermission>  getPermissionByRoleName(@RequestParam(required = true) @ApiParam("角色id") int roleId,
			@RequestParam(required = true) @ApiParam("页面名字") String pageName) {
		return permissionService.getPermissionsByPageName(roleId,pageName);
	}

}
